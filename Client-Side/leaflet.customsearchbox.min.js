// Base Code from to https://github.com/8to5Developer
// Editors: Jesse Tran
// 

function getControlHrmlContent() { 
    return '<div id="controlbox" > ' + 
                '<div id="boxcontainer" class="searchbox searchbox-shadow" > ' + 
                    '<div class="searchbox-menu-container"> ' + 
                        ' <button aria-label="Menu" id="searchbox-menubutton" class="searchbox-menubutton" onclick="toggleOutterSearchBox();"></button> ' + 
                        ' <span aria-hidden="true" style="display:none">' + 
                            'Menu' + 
                        '</span> ' + 
                    ' </div> ' + 
                    ' <div> ' + 
                        ' <input id="searchboxinput" type="text" value="" oninput="detectInputChange(true)" style="position: relative;"/> ' + 
                    ' </div> ' + 
                    ' <div class="searchbox-searchbutton-container"> ' + 
                        ' <button aria-label="search" id="searchbox-searchbutton" class="searchbox-searchbutton"></button> ' + 
                        ' <span aria-hidden="true" style="display:none;">' + 
                            'search' + 
                        '</span> ' + 
                    ' </div> ' + 
                ' </div> ' + 
            ' </div> ' + 
            ' <div class="panel"> ' + 
                ' <div class="panel-header"> '+ 
                    ' <div class="panel-header-container"> ' + 
                        ' <span id="panel-header-title" class="panel-header-title"> ' + 
                            '<div id="controlboxInner" > ' + 
                                '<div id="boxcontainerInner" class="searchbox searchbox-shadow" > ' + 
                                    '<div class="searchbox-menu-container"> ' + 
                                       ' <button aria-label="Menu" id="searchbox-menubuttonInner" class="searchbox-menubutton" onclick="toggleOutterSearchBox();"></button> ' + 
                                       ' <span aria-hidden="true" style="display:none">' + 
                                           'Menu' + 
                                      '</span> ' + 
                                    ' </div> ' + 
                                    ' <div> ' + 
                                        ' <input id="searchboxinputInner" type="text" value=""  oninput="detectInputChange(false)" style="position: relative;"/> ' + 
                                    ' </div> ' + 
                                    ' <div class="searchbox-searchbutton-container"> ' + 
                                        ' <button aria-label="search" id="searchbox-searchbuttonInner" class="searchbox-searchbutton"></button> ' + 
                                        ' <span aria-hidden="true" style="display:none;">' + 
                                            'search' + 
                                        '</span> ' + 
                                    ' </div> ' + 
                                ' </div> ' + 
                            ' </div> ' +
                        ' </span> ' + 
                    ' </div> ' + 
                ' </div> ' + 
                ' <div class="panel-content"> ' + 
                ' </div> ' + 
            ' </div>' 
}


function generateHtmlContent(a) { 
    var b = '<ul class="panel-list">'
    b +=' <li class="panel-list-item d-flex justify-content-center pt-0 pb-2">' +
                ' <div class="d-flex justify-content-center">' + 
                    ' <select id="dropDown"> </select>' + 
                ' </div>' +
            '</li>'

    for (d = 0; d < a.Items.length; d++) { 
        var c = a.Items[d], b = b + '<li class="panel-list-item pb-2"><div>'; 

        "link" == c.type ? (b += '<span class="panel-list-item-icon ' + c.icon + '" ></span>', b += '<a href="' + c.href + '">' + c.name + "</a>") : 
        
        "checkbox" == c.type && (b += '<span class="panel-list-item-icon ' + c.icon + '" ></span>', b += '<input type=checkbox id="' + c.value + 'ID" onclick="' + c.onclick + '" value="' + c.value + '"> <span class=" pl-3">' + c.name + '</span>') ;
        b += "</li></div>"
        
        //Add slider
        b += '<li class="panel-list-item pt-0 pb-0" style="display:none;"> ' + 
                ' <div class="row"> ' + 
                    ' <div class="col pr-0 text-center">' + 
                        c.min +
                    '  </div> ' + 
                    ' <div class="col-8 px-0"> ' + 
                        ' <input id="' + c.value + 'SliderID" type="range" class="custom-range" value="0" min="' + c.min +'" max="' + c.max + '" step="0.1" onchange="updateSliderValue(' + "'" + '' + c.value + "'" + ', this.value);" > ' + 
                    ' </div> ' + 
                    ' <div class="col pl-0 text-center">  ' + 
                        c.max + 
                    '</div> ' +
                ' </div> ' + 
                ' <br/>' + 
                ' <div>' +
                    ' <p id="value' + c.value + '" class="text-center mb-0"> Value: ' + c.min + ' </p>' +
                ' </div>'
            ' </li>'

    } 
            
    //Add Submit button
    b += '<li class="panel-list-item d-flex justify-content-center pt-4">' +
            '<button type="button" class="m-*-auto btn-light px-4" onclick="searchPopulationPercent()" >' +
                'Submit' +
            '</button>' +
        ' </li>'
    return b + "</ul>" 
}

function createSearchboxControl() {
    return L.Control.extend({
        _sideBarHeaderTitle: "Sample Title", 
        _sideBarMenuItems: {
            Items: [
                { 
                    type: "link", 
                    name: "Link 1 (github.com)", 
                    href: "http://github.com", 
                    icon: "icon-local-carwash" 
                }, 
                { 
                    type: "link", 
                    name: "Link 2 (google.com)", 
                    href: "http://google.com", 
                    icon: "icon-cloudy" 
                }, 
                { 
                    type: "button", 
                    name: "Button 1", 
                    onclick: "alert('button 1 clicked !')", 
                    icon: "icon-potrait" 
                }, 
                { 
                    type: "button", 
                    name: "Button 2", 
                    onclick: "alert('button 2 clicked !')", 
                    icon: "icon-local-dining" 
                }, 
                {
                    type: "link", 
                    name: "Link 3 (stackoverflow.com)",
                    href: "http://stackoverflow.com", 
                    icon: "icon-bike"
                }
            ], 
            _searchfunctionCallBack: function (a) { alert("calling the default search call back") }
        }, 
        options: { position: "topleft" }, 
        initialize: function (a) { 
            L.Util.setOptions(this, a); 
            a.sidebarTitleText && (this._sideBarHeaderTitle = a.sidebarTitleText); 
            a.sidebarMenuItems && (this._sideBarMenuItems = a.sidebarMenuItems) 
        }, 
        onAdd: function (a) {
            a = L.DomUtil.create("div"); 
            a.id = "controlcontainer"; 
            var b = this._sideBarHeaderTitle, d = this._sideBarMenuItems, c = this._searchfunctionCallBack; 
            $(a).html(getControlHrmlContent());
            setTimeout(function () { 
                $(".searchbox-searchbutton").click(function () { var a = $("#searchboxinput").val(); c(a) }); 
                $("#searchbox-menubutton").click(function () {  $(".panel").toggle(/* "slide", { direction: "left" }, 700 */) }); 
                $("#searchbox-menubuttonInner").click(function () {  $(".panel").toggle(/* "slide", { direction: "left" }, 700 */) }); 
                $(".panel-close-button").click(function () { $(".panel").toggle(/*"slide", { direction: "left" }, 700 */) }); 
                $("#searchboxinput").keypress(function(e) { if(e.keyCode == 13){ $(".searchbox-searchbutton").click() } });
                $("#searchboxinputInner").keypress(function(e) { if(e.keyCode == 13){ $(".searchbox-searchbutton").click() } });
                //$("panel-header-container").append(function(){ addSearchBar()}   ); 
                //console.log(b)
                var a = generateHtmlContent(d); $(".panel-content").html(a) 
            }, 1); 
                L.DomEvent.disableClickPropagation(a); 
                return a
        }
    })
};

function toggleOutterSearchBox() {
    var controlBox = document.getElementById("controlbox");
    if ( controlBox.classList.contains("hidden") ) {
        controlBox.classList.remove("hidden")
    } else {
        controlBox.classList.add("hidden")
    }
}

function detectInputChange(position) {
    if (!position){
        $("#searchboxinput").val($("#searchboxinputInner").val()) 
    } else{
        $("#searchboxinputInner").val($("#searchboxinput").val())
    }
}

